<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.wimoor</groupId>
		<artifactId>wimoor-all</artifactId>
		<version>2.0.0</version>
	</parent>
	 
	<artifactId>wimoor-auth</artifactId>
	<packaging>jar</packaging>
	<name>wimoor-auth</name>
	<description>for wimoor sso-client </description>
	<properties>
		<java.version>1.8</java.version>
		<spring.shiro.version>1.6.0</spring.shiro.version>
        <wimoor.version>2.0.0</wimoor.version>
	</properties>
	<dependencies>
	    <dependency>
               <groupId>com.alibaba.cloud</groupId>
               <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
                  <!-- Spring Cloud & Alibaba -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
        <!-- 配置中心 -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
       <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		  <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
		<!--      mydependency  -->
		 <!--mysql-->
        <dependency>  
            <groupId>mysql</groupId>  
            <artifactId>mysql-connector-java</artifactId>  
            <version>8.0.21</version> 
        </dependency>  
	 <dependency>
	     <groupId>com.alibaba</groupId>
	     <artifactId>druid</artifactId>
	     <version>1.2.15</version>
	</dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-engine-core</artifactId>
            <version>2.0</version>
        </dependency>
 
        <!--lombok用来简化实体类：需要安装lombok插件-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
        </dependency>
 
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.28</version>
        </dependency>
            <dependency>
				 <groupId>com.github.wxpay</groupId>
			    <artifactId>wxpay-sdk</artifactId>
			    <version>0.0.3</version>
			</dependency>
        <!--gson-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
 <!-- Ehcache -->
		<dependency>
		    <groupId>net.sf.ehcache</groupId>
		    <artifactId>ehcache</artifactId>
		</dependency>
 
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>${spring.shiro.version}</version>
        </dependency>
	    <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-cas</artifactId>
            <version>1.4.2</version>
        </dependency>
 
		 <dependency>
		    <groupId>org.apache.shiro</groupId>
		    <artifactId>shiro-ehcache</artifactId>
		    <version>1.4.0</version>
		</dependency>

       <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>1.4.0</version>
        </dependency>

       
        <dependency>
            <groupId>org.crazycake</groupId>
            <artifactId>shiro-redis</artifactId>
            <version>2.4.2.1-RELEASE</version>
        </dependency>
        		
			<dependency>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-starter-freemarker</artifactId>
			</dependency>
        
          <dependency>
		    <groupId>commons-net</groupId>
		    <artifactId>commons-net</artifactId>
		    <version>3.6</version>
		</dependency>
		
	    <dependency>
		    <groupId>com.wimoor</groupId>
		    <artifactId>admin-api</artifactId>
		    <version>${wimoor.version}</version>
		</dependency>

		<dependency>
		    <groupId>commons-httpclient</groupId>
		    <artifactId>commons-httpclient</artifactId>
		    <version>3.1</version>
		</dependency>
	    <dependency>
	    	<groupId>org.springframework.boot</groupId>
	    	<artifactId>spring-boot-configuration-processor</artifactId>
	    	<optional>true</optional>
	    </dependency>
	</dependencies>

	    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                  <configuration>
                     <source>1.8</source>
                     <target>1.8</target>
                     <skipTests>true</skipTests>
                 </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <!-- linux 系统-->
                        <!--                        <configuration>-->
                        <!--                            <executable>sh</executable>-->
                        <!--                            <arguments>-->
                        <!--                                <argument>${project.parent.basedir}/script/load-env.sh</argument>-->
                        <!--                            </arguments>-->
                        <!--                        </configuration>-->
                        <!-- win 系统-->
                        <configuration>
                            <executable>powershell</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>-ExecutionPolicy</argument>
                                <argument>Unrestricted</argument>
                                <argument>-File</argument>
                                <argument>${project.parent.basedir}/script/load-env.ps1</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.12</version>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
                            <!-- 详见：https://github.com/spotify/docker-maven-plugin    Invalid repository name ... only [a-z0-9-_.] are allowed-->
                            <imageName>wimoor-auth:${env.AUTH_VERSION}</imageName>
                            <!-- 指定Dockerfile所在的路径 -->
                            <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>image-tag</id>
                        <phase>install</phase>
                        <goals>
                            <goal>tag</goal>      <!--tag命令，相当于docker的tag命令-->
                        </goals>
                        <configuration>
                            <image>wimoor-auth:${env.AUTH_VERSION}</image>   <!--镜像名-->
                            <newName>${env.REMOTE_HUB}wimoor-auth:${env.AUTH_VERSION}</newName>   <!--打的标签名-->
                        </configuration>
                    </execution>
                    <execution>
                        <id>package-push</id>
                        <phase>install</phase>
                        <goals>
                            <goal>push</goal>    <!--相当于docker的push命令！！！ 这里会去maven的setting文件中根据configuration/serverId标签的id，读取到docker私有仓库的用户名和密码-->
                        </goals>
                        <configuration>
                            <imageName>${env.REMOTE_HUB}wimoor-auth:${env.AUTH_VERSION}</imageName>  <!--要push的镜像名-->
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
                    <!-- 详见：https://github.com/spotify/docker-maven-plugin    Invalid repository name ... only [a-z0-9-_.] are allowed-->
                    <imageName>wimoor-auth:${env.AUTH_VERSION}</imageName>
                    <!-- 指定Dockerfile所在的路径 -->
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
