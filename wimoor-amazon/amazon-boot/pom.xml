<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.wimoor</groupId>
		<artifactId>wimoor-amazon</artifactId>
		<version>2.0.0</version>
	</parent>
	<artifactId>amazon-boot</artifactId>
    <modelVersion>4.0.0</modelVersion>
	<name>wimoor-amazon</name>
	<description> for amazon</description>
	<properties>
		<java.version>1.8</java.version>
		<spring.shiro.version>1.6.0</spring.shiro.version>
        <wimoor.version>2.0.0</wimoor.version>
	</properties>
	<dependencies>
	    <dependency>
               <groupId>com.alibaba.cloud</groupId>
               <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
      <!-- Spring Cloud & Alibaba -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
        <!-- 配置中心 -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
       <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
      
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
	   <dependency>
	        <groupId>com.github.jeffreyning</groupId>
	        <artifactId>mybatisplus-plus</artifactId>
	        <version>1.5.1-RELEASE</version>
	    </dependency>
		<dependency>
		   <groupId>com.lowagie</groupId>
		   <artifactId>itext</artifactId>
		   <version>2.1.7</version>
		</dependency>
		 <dependency>
		   <groupId>com.lowagie</groupId>
		   <artifactId>itext-rtf</artifactId>
		   <version>2.1.7</version>
		</dependency>
		
     <!-- itext核心jar包 -->
 		 <dependency>
     		<groupId>com.itextpdf</groupId>
     		<artifactId>itextpdf</artifactId>
     		<version>5.5.10</version>
		 </dependency>
		  <dependency>
    		<groupId>com.itextpdf</groupId>
     		<artifactId>itext-asian</artifactId>
    		<version>5.2.0</version>
		 </dependency>
		 <dependency>
     		<groupId>org.bouncycastle</groupId>
  			<artifactId>bcprov-jdk15on</artifactId>
     		<version>1.54</version>
		 </dependency>
 		<!-- 以上3个是itextjar包 -->
        <!--gson-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <!-- Ehcache -->
		<dependency>
		    <groupId>net.sf.ehcache</groupId>
		    <artifactId>ehcache</artifactId>
		</dependency>
         <dependency>
	        <groupId>net.sourceforge.htmlunit</groupId>
	        <artifactId>htmlunit</artifactId>
	    </dependency>
        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
		<dependency>
		    <groupId>org.jsoup</groupId>
		    <artifactId>jsoup</artifactId>
		    <version>1.10.2</version>
		</dependency>	
		    <!--网页解析 -->
	   <dependency>
		    <groupId>org.dom4j</groupId>
		    <artifactId>dom4j</artifactId>
		    <version>2.1.1</version>
		</dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-signer</artifactId>
            <version>1.11.610</version>
        </dependency>
		 <dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>3.16</version>
		</dependency>
		 <dependency>
			    <groupId>org.apache.poi</groupId>
			    <artifactId>poi-ooxml</artifactId>
			    <version>3.16</version>
         </dependency>
      <!--表达式计算 https://mvnrepository.com/artifact/com.googlecode.aviator/aviator -->
	<dependency>
	    <groupId>com.googlecode.aviator</groupId>
	    <artifactId>aviator</artifactId> 
	    <version>3.0.0</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-sqs -->
	<dependency>
	    <groupId>com.amazonaws</groupId>
	    <artifactId>aws-java-sdk-sqs</artifactId>
	    <version>1.11.368</version>
	</dependency>
	 <dependency>
     <groupId>com.alibaba</groupId>
     <artifactId>druid</artifactId>
     <version>1.2.15</version>
    </dependency>
	<dependency>
		    <groupId>com.wimoor</groupId>
		    <artifactId>amazon-api</artifactId>
		    <version>${wimoor.version}</version>
		</dependency>
        <dependency>
		    <groupId>com.wimoor</groupId>
		    <artifactId>erp-api</artifactId>
		    <version>${wimoor.version}</version>
		</dependency>
		 <dependency>
		    <groupId>com.wimoor</groupId>
		    <artifactId>admin-api</artifactId>
		    <version>${wimoor.version}</version>
		</dependency>
	 	 <dependency>
		    <groupId>com.wimoor</groupId>
		    <artifactId>amazon-sp-api</artifactId>
		    <version>${wimoor.version}</version>
		</dependency>
	 	 <dependency>
	 	 	<groupId>org.springframework.boot</groupId>
	 	 	<artifactId>
	 	 		spring-boot-configuration-processor
	 	 	</artifactId>
	 	 	<optional>true</optional>
	 	 </dependency>
	</dependencies>

	 <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
           <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                  <configuration>
                     <source>1.8</source>
                     <target>1.8</target>
                 </configuration>
            </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<!-- linux 系统-->
						<!--                        <configuration>-->
						<!--                            <executable>sh</executable>-->
						<!--                            <arguments>-->
						<!--                                <argument>${project.parent.basedir}/script/load-env.sh</argument>-->
						<!--                            </arguments>-->
						<!--                        </configuration>-->
						<!-- win 系统-->
						<configuration>
							<executable>powershell</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>-ExecutionPolicy</argument>
								<argument>Unrestricted</argument>
								<argument>-File</argument>
								<argument>${project.parent.basedir}/../script/load-env.ps1</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.12</version>
				<executions>
					<execution>
						<id>build-image</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
							<!-- 详见：https://github.com/spotify/docker-maven-plugin    Invalid repository name ... only [a-z0-9-_.] are allowed-->
							<imageName>wimoor-amazon:${env.AMAZON_VERSION}</imageName>
							<!-- 指定Dockerfile所在的路径 -->
							<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${project.build.finalName}.jar</include>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>image-tag</id>
						<phase>install</phase>
						<goals>
							<goal>tag</goal>      <!--tag命令，相当于docker的tag命令-->
						</goals>
						<configuration>
							<image>wimoor-amazon:${env.AMAZON_VERSION}</image>   <!--镜像名-->
							<newName>${env.REMOTE_HUB}wimoor-amazon:${env.AMAZON_VERSION}</newName>   <!--打的标签名-->
						</configuration>
					</execution>
					<execution>
						<id>package-push</id>
						<phase>install</phase>
						<goals>
							<goal>push</goal>    <!--相当于docker的push命令！！！ 这里会去maven的setting文件中根据configuration/serverId标签的id，读取到docker私有仓库的用户名和密码-->
						</goals>
						<configuration>
							<imageName>${env.REMOTE_HUB}wimoor-amazon:${env.AMAZON_VERSION}</imageName>  <!--要push的镜像名-->
						</configuration>
					</execution>
				</executions>
				<configuration>
					<!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
					<!-- 详见：https://github.com/spotify/docker-maven-plugin    Invalid repository name ... only [a-z0-9-_.] are allowed-->
					<imageName>wimoor-amazon:${env.AMAZON_VERSION}</imageName>
					<!-- 指定Dockerfile所在的路径 -->
					<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
        </plugins>
    </build>
</project>
